@use "sass:math";

$w: 8;
$p: 100 / $w;
$h: ceil($w / 2);

$palette: (
  #FFCCAA
  #FF77A8
  #83769C
  #29ADFF
  #00E436
  #FFEC27
  #FFA300
  #FF004D
);

@mixin frame ($pixels) {
  $i: 0;
  $n: length($pixels);
  $comma: unquote(",");
  $box-shadow: ();
  $landscape: ();
  
  @each $pixel in $pixels {
    $x: nth($pixel, 1);
    $y: nth($pixel, 2);
    $color: nth($pixel, 3);
    $size: nth($pixel, 4);

    $box-shadow: append(
      $box-shadow,
      calc(
        #{$p * ($x - 1)}
        * 1vmin
      )
      calc(
        #{$p * ($y + 1)}
        * 1vmin
      )
      #{$size}px
      $color
    );
    
    $i: $i + 1;
    @if $i < $n {
      $box-shadow: append(
        $box-shadow,
        $comma,
      );
    }
  }

  box-shadow: $box-shadow;
}

@function frame($z: 0) {
  $pixels: ();
  @for $x from 1 through $w - 1 {
    @for $y from 1 through $w - 1 {
      $color: nth($palette, 1);
      
      $xo: abs($x - $h);
      $yo: abs($y - $h);
      
      $c: 0;
      @if $y < 4 {
        $c: 0 - $y - $z;
      } @else {
        $c: $y - $z;
      }
      
      $c: $c+abs(($w / 2) - $x);
      $c: $c%length($palette)+1;
      $color: nth($palette, $c);
      
      $size: 0;
      
      $show: false;
      
      @if $xo == 0 or $yo == 0 {
      } @else {
        $show: (
          ($xo + ($z % 7)
            !=
          $yo + ($z % 3))
        );
      }
      
      $dm: 8;
      $size: $xo
        * $dm + $yo
        * $dm * 2;
      
      @if $show {
        $pixels: append($pixels, (
          $x, $y, $color, $size
        ));
      }
    }
  }
  @return $pixels;
}

html {
  height: 100vh;
  width: 100vw;
  background: #111;
}

body {
  margin: 0;
  width: 100vmin;
  height: 100vmin;
  position: absolute;
  overflow: hidden;
  padding-left: calc(
    50vw - 50vmin
  );
}

@mixin frames ($frames) {
  $i: 0;
  $n: length($frames);
  $mul: 100 / $n;
  $name: lwave;
  
  @keyframes frames {
    @each $frame in $frames {
      #{$i * $mul * 1%} {
        @include frame($frame);
      }
      $i: $i + 1;
    }
  }
}

$wave: ();
@for $i from 0 through 128 {
  $wave: append($wave, frame($i))
}

@include frames($wave);

body::after {
  content: "";
  height: calc(#{$p} * 1vmin);
  width: calc(#{$p} * 1vmin);
  display: block;
  position: absolute;
  top: calc(#{$p} * -2vmin);
  border-radius: 50%;
  padding: calc(#{$p} * 0.5vmin);
 
  animation:
    frames
    64s
    ease-in
    infinite
    alternate;
}

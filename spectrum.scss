@use "sass:map";
@use "sass:math";

$w: 8;
$p: 100 / $w;
$h: ceil($w / 2);

$palette: (
  #FFCCAA
  #FF77A8
  #83769C
  #29ADFF
  #00E436
  #FFEC27
  #FFA300
  #FF004D
);

$waveFrames: ();
@for $i from 0 through 128 {
  $percent: #{$i * (100 / 128) * 1%};
  $boxShadow: ();

  @for $x from 1 through $w - 1 {
    @for $y from 1 through $w - 1 {
      $color: nth($palette, 1);

      $xo: abs($x - $h);
      $yo: abs($y - $h);

      $c: 0;
      @if $y < 4 {
        $c: 0 - $y - $i;
      } @else {
        $c: $y - $i;
      }

      $c: $c+abs(($w / 2) - $x);
      $c: $c%length($palette)+1;
      $color: nth($palette, $c);

      $size: 0;

      $show: false;

      @if $xo == 0 or $yo == 0 {
      } @else {
        $show: (
          ($xo + ($i % 7)
            !=
          $yo + ($i % 3))
        );
      }

      $dm: 8;
      $size: $xo
        * $dm + $yo
        * $dm * 2;

      @if $show {
        $boxShadow: append(
          $boxShadow,
          calc(
            #{$p * ($x - 1)}
            * 1vmin
          )
          calc(
            #{$p * ($y + 1)}
            * 1vmin
          )
          #{$size}px
          $color,
          $separator: comma,
        );
      }
    }
  }

  $waveFrames: map.set(
    $waveFrames,
    $percent,
    $boxShadow
  );
}

html {
  height: 100vh;
  width: 100vw;
  background: #111;
}

body {
  margin: 0;
  width: 100vmin;
  height: 100vmin;
  position: absolute;
  overflow: hidden;
  padding-left: calc(
    50vw - 50vmin
  );
}

@keyframes spectrum {
  @each $percent, $boxShadow in $waveFrames {
    #{$percent} {
      box-shadow: $boxShadow;
    }
  }
}

body::after {
  content: "";
  height: calc(#{$p} * 1vmin);
  width: calc(#{$p} * 1vmin);
  display: block;
  position: absolute;
  top: calc(#{$p} * -2vmin);
  border-radius: 50%;
  padding: calc(#{$p} * 0.5vmin);

  animation-name: spectrum;
  animation-duration: 64s;
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
}
